<html>
<head>
  <title>Tifo</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <style>
    .p-2 {
      width:100%;
    }
    .flex-row {
      height:100%;
    }
    .d-flex {
      max-height:100%
    }
  </style>
</head>
<body>

  <div class="d-flex flex-column">
    <% for (var i = 0; i != 5; i++) { %>
    <div class="d-flex flex-row">
      <% for (var j = 0; j != 2; j++) { %>
      <div id="<%= i %>-<%= j %>" class="p-2"></div>
      <% } %>
    </div>
    <% } %>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/es5-shim/4.0.5/es5-shim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.23.0/es6-shim.min.js"></script>
  <script src="/timesync/timesync.js"></script>
  <script>
  // Synchronize time
  var ts = timesync.create({
    server: '/timesync',
    interval: 1000
  });

  setInterval(function () {
    serverTime = new Date(ts.now());
  }, 1000);

  // Receive socket connection
  var socket = io();
  //var colors = ['red','green','blue']
  var colors = <%- JSON.stringify(colors) %>
  i = 0;
  socket.on('start', (data) => {
    startTime = new Date(data.time).getTime();
    setTimeout(() => {
      interval = setInterval(() => {
        if (i >= 30 && i%30==0) {
          console.log("Resizing index")
          currentTime = new Date(ts.now()).getTime();
          numSeconds = Math.floor((currentTime-startTime)/1000);
          expectedIndex = 30*numSeconds;
          i = expectedIndex;
        }
        console.log(i);
        for (var y = 0; y != height; i++) {
          for (var x = 0; x != width; j++) {
            $("#${y}-${x}").css('background-color', colors[y][x][i]);
          }
        }
        i++;
      },
        33);
      },
      new Date(data.time).getTime() - new Date(ts.now()).getTime()
    );
  });

  socket.on('stop', (data) => {
    clearInterval(interval);
    i = 0;
    document.body.style.backgroundColor = 'white'
  });
  </script>
  </body>
  </html>
